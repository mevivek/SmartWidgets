// Generated by data binding compiler. Do not edit!
package com.tiffinia.library.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.tiffinia.library.R;
import com.tiffinia.library.entities.Address;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityLocationBinding extends ViewDataBinding {
  @NonNull
  public final CardView autocomplete;

  @NonNull
  public final MaterialButton cancelMap;

  @NonNull
  public final AppCompatImageView currentLocation;

  @NonNull
  public final AppCompatImageView marker;

  @NonNull
  public final TextView popupMapAddress;

  @NonNull
  public final MaterialButton setMap;

  @Bindable
  protected Address mAddress;

  protected ActivityLocationBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView autocomplete, MaterialButton cancelMap, AppCompatImageView currentLocation,
      AppCompatImageView marker, TextView popupMapAddress, MaterialButton setMap) {
    super(_bindingComponent, _root, _localFieldCount);
    this.autocomplete = autocomplete;
    this.cancelMap = cancelMap;
    this.currentLocation = currentLocation;
    this.marker = marker;
    this.popupMapAddress = popupMapAddress;
    this.setMap = setMap;
  }

  public abstract void setAddress(@Nullable Address address);

  @Nullable
  public Address getAddress() {
    return mAddress;
  }

  @NonNull
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_location, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityLocationBinding>inflateInternal(inflater, R.layout.activity_location, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_location, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityLocationBinding>inflateInternal(inflater, R.layout.activity_location, null, false, component);
  }

  public static ActivityLocationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityLocationBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityLocationBinding)bind(component, view, R.layout.activity_location);
  }
}
